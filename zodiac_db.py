import streamlit as st
import pandas as pd
from pymongo import MongoClient

# ----------------------
# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB
# ----------------------
MONGO_URI = st.secrets["MONGO_URI"]  # ‡πÄ‡∏Å‡πá‡∏ö Secret ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô Streamlit Cloud Settings
DB_NAME = "your_database"
COLLECTION_NAME = "zodiac_profiles"

# Connect MongoDB
client = MongoClient(MONGO_URI)
db = client[DB_NAME]
collection = db[COLLECTION_NAME]

# ----------------------
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á DataFrame ‡πÄ‡∏õ‡πá‡∏ô List of Dict
# ----------------------
def transform_dataframe(df):
    records = []
    for _, row in df.iterrows():
        record = {
            "gender": row["‡πÄ‡∏û‡∏®"],
            "zodiac": row["‡∏ô‡∏±‡∏Å‡∏©‡∏±‡∏ï‡∏£"],
            "characteristics": row["‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡πÇ‡∏î‡∏¢‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ"],
            "strengths": row["‡∏à‡∏∏‡∏î‡πÅ‡∏Ç‡πá‡∏á"],
            "weaknesses": row["‡∏à‡∏∏‡∏î‡∏≠‡πà‡∏≠‡∏ô"],
            "advice_for_balance": row["‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏°‡∏î‡∏∏‡∏•‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï"],
            "charm": row["‡πÄ‡∏™‡∏ô‡πà‡∏´‡πå‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏î‡∏π‡∏î‡πÉ‡∏à"],
            "zodiac_relations": row["‡∏ô‡∏±‡∏Å‡∏©‡∏±‡∏ï‡∏£‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÅ‡∏•‡∏∞‡∏õ‡∏∞‡∏ó‡∏∞"],
            "summary": row["‡∏™‡∏£‡∏∏‡∏õ"]
        }
        records.append(record)
    return records

# ----------------------
# UI - Streamlit Layout
# ----------------------
st.title("üìÇ Upload Excel ‚ûî Update MongoDB NoSQL")

uploaded_file = st.file_uploader("üìé Upload your Excel file:", type=["xlsx"])

if uploaded_file:
    # ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel
    df = pd.read_excel(uploaded_file)
    st.subheader("üîç Preview Data:")
    st.dataframe(df)

    records = transform_dataframe(df)

    if st.button("üíæ Insert/Update Database"):
        if records:
            inserted, updated = 0, 0
            for record in records:
                filter_query = {"gender": record["gender"], "zodiac": record["zodiac"]}
                update_data = {"$set": record}
                result = collection.update_one(filter_query, update_data, upsert=True)
                if result.matched_count > 0:
                    updated += 1
                else:
                    inserted += 1
            st.success(f"üöÄ Successfully inserted {inserted} and updated {updated} records into {COLLECTION_NAME}!")
        else:
            st.warning("No data to insert!")

    st.subheader("üìä Current Database Records:")
    docs = list(collection.find({}, {"_id": 0}))
    if docs:
        st.dataframe(pd.DataFrame(docs))
    else:
        st.info("üìö No records found in database.")

# ----------------------
# Tips
# ----------------------
# ‚Ä¢ ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Streamlit Cloud Settings > Secrets ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö MONGO_URI ‡πÄ‡∏ä‡πà‡∏ô
# ‚Ä¢ ‡∏õ‡∏£‡∏±‡∏ö df.columns ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á
# ‚Ä¢ ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö Bulk Insert/Update
# ‚Ä¢ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Dashboard ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡πÄ‡∏û‡∏•‡∏á
