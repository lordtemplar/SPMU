import streamlit as st
from pymongo import MongoClient
import datetime

# ------------------------------
# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB ‡∏î‡πâ‡∏ß‡∏¢ Secret
# ------------------------------
MONGO_URI = st.secrets["MONGO_URI"]
DATABASE_NAME = st.secrets["DATABASE_NAME"]

client = MongoClient(MONGO_URI)
db = client[DATABASE_NAME]

# ------------------------------
# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Collection
# ------------------------------
@st.cache_data
def load_profiles(collection_name):
    collection = db[collection_name]
    profiles = list(collection.find({}))
    return profiles

# ------------------------------
# ‡∏´‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î
# ------------------------------
def find_profile(profiles, field, keyword):
    for profile in profiles:
        if keyword == str(profile.get(field, "")):
            return profile
    return None

# ------------------------------
# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö Streamlit
# ------------------------------
st.set_page_config(page_title="Profiles Explorer", page_icon="üåü")

st.title("üåü ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Profiles üåü")

# ------------------------------
# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
# ------------------------------
search_type = st.radio(
    "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤",
    ("Day Master (‡∏ò‡∏≤‡∏ï‡∏∏‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß)", "Zodiac Profile (‡∏ô‡∏±‡∏Å‡∏™‡∏±‡∏ï‡∏ß‡πå)", "Calendar Profile (‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô)")
)

# Mapping
collection_map = {
    "Day Master (‡∏ò‡∏≤‡∏ï‡∏∏‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß)": "daymaster_profiles",
    "Zodiac Profile (‡∏ô‡∏±‡∏Å‡∏™‡∏±‡∏ï‡∏ß‡πå)": "zodiac_profiles",
    "Calendar Profile (‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô)": "calendar_profiles_2568"
}

field_map = {
    "Day Master (‡∏ò‡∏≤‡∏ï‡∏∏‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß)": "day_master",
    "Zodiac Profile (‡∏ô‡∏±‡∏Å‡∏™‡∏±‡∏ï‡∏ß‡πå)": "zodiac_sign",  # ‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥ field ‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏µ‡πâ
    "Calendar Profile (‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô)": "date"  # ‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥ field ‡πÄ‡∏õ‡πá‡∏ô text ‡πÄ‡∏ä‡πà‡∏ô "1 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2568"
}

selected_collection = collection_map[search_type]
search_field = field_map[search_type]

# ------------------------------
# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
# ------------------------------
profiles = load_profiles(selected_collection)

# ------------------------------
# UI ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
# ------------------------------

if search_type in ("Day Master (‡∏ò‡∏≤‡∏ï‡∏∏‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß)", "Zodiac Profile (‡∏ô‡∏±‡∏Å‡∏™‡∏±‡∏ï‡∏ß‡πå)"):
    # ‡πÉ‡∏ä‡πâ Dropdown
    options = sorted({profile.get(search_field, "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏") for profile in profiles})
    selected_option = st.selectbox(f"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å {search_type}", options)

    if selected_option:
        profile = find_profile(profiles, search_field, selected_option)

        if profile:
            st.success(f"‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö {selected_option}")
            st.json(profile)
        else:
            st.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

elif search_type == "Calendar Profile (‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô)":
    # ‡πÉ‡∏ä‡πâ Date Picker
    selected_date = st.date_input(
        "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡∏õ‡∏µ",
        value=datetime.date(2025, 1, 1),
        min_value=datetime.date(2025, 1, 1),
        max_value=datetime.date(2025, 12, 31)
    )

    # ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÄ‡∏ä‡πà‡∏ô "1 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏° 2568"
    thai_months = [
        "‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°", "‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå", "‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°", "‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô", "‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°", "‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô",
        "‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°", "‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°", "‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô", "‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°", "‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô", "‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°"
    ]

    day = selected_date.day
    month = thai_months[selected_date.month - 1]
    year = selected_date.year + 543  # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ‡∏û.‡∏®.

    formatted_date = f"{day} {month} {year}"

    st.info(f"üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {formatted_date}")

    profile = find_profile(profiles, search_field, formatted_date)

    if profile:
        st.success(f"‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {formatted_date}")
        st.json(profile)
    else:
        st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {formatted_date}")

